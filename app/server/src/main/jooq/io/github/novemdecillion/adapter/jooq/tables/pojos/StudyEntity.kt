/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.pojos


import io.github.novemdecillion.adapter.jooq.tables.interfaces.IStudy
import io.github.novemdecillion.domain.StudyStatus

import java.time.OffsetDateTime
import java.util.UUID

import org.jooq.JSONB


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class StudyEntity(
    override var studyId: UUID? = null, 
    override var accountId: UUID? = null, 
    override var slideId: String? = null, 
    override var status: StudyStatus? = null, 
    override var progress: JSONB? = null, 
    override var progressRate: Int? = null, 
    override var answer: JSONB? = null, 
    override var score: JSONB? = null, 
    override var shuffledQuestion: JSONB? = null, 
    override var startAt: OffsetDateTime? = null, 
    override var endAt: OffsetDateTime? = null, 
    override var index: Int? = null
): IStudy {


    override fun toString(): String {
        val sb = StringBuilder("StudyEntity (")

        sb.append(studyId)
        sb.append(", ").append(accountId)
        sb.append(", ").append(slideId)
        sb.append(", ").append(status)
        sb.append(", ").append(progress)
        sb.append(", ").append(progressRate)
        sb.append(", ").append(answer)
        sb.append(", ").append(score)
        sb.append(", ").append(shuffledQuestion)
        sb.append(", ").append(startAt)
        sb.append(", ").append(endAt)
        sb.append(", ").append(index)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: IStudy) {
        studyId = from.studyId
        accountId = from.accountId
        slideId = from.slideId
        status = from.status
        progress = from.progress
        progressRate = from.progressRate
        answer = from.answer
        score = from.score
        shuffledQuestion = from.shuffledQuestion
        startAt = from.startAt
        endAt = from.endAt
        index = from.index
    }

    override fun <E : IStudy> into(into: E): E {
        into.from(this)
        return into
    }
}
