/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.records


import io.github.novemdecillion.adapter.jooq.tables.SlideTable
import io.github.novemdecillion.adapter.jooq.tables.interfaces.ISlide

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class SlideRecord() : UpdatableRecordImpl<SlideRecord>(SlideTable.SLIDE), Record1<String?>, ISlide {

    override var slideId: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row1<String?> = super.fieldsRow() as Row1<String?>
    override fun valuesRow(): Row1<String?> = super.valuesRow() as Row1<String?>
    override fun field1(): Field<String?> = SlideTable.SLIDE.SLIDE_ID
    override fun component1(): String? = slideId
    override fun value1(): String? = slideId

    override fun value1(value: String?): SlideRecord {
        this.slideId = value
        return this
    }

    override fun values(value1: String?): SlideRecord {
        this.value1(value1)
        return this
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: ISlide) {
        slideId = from.slideId
    }

    override fun <E : ISlide> into(into: E): E {
        into.from(this)
        return into
    }

    /**
     * Create a detached, initialised SlideRecord
     */
    constructor(slideId: String? = null): this() {
        this.slideId = slideId
    }
}
