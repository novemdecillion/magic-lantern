/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq


import io.github.novemdecillion.adapter.jooq.sequences.GROUP_GENERATION_ID_SEQ
import io.github.novemdecillion.adapter.jooq.tables.AccountGroupAuthorityTable
import io.github.novemdecillion.adapter.jooq.tables.AccountGroupAuthority_0Table
import io.github.novemdecillion.adapter.jooq.tables.AccountGroupAuthority_1Table
import io.github.novemdecillion.adapter.jooq.tables.AccountTable
import io.github.novemdecillion.adapter.jooq.tables.CurrentAccountGroupAuthorityTable
import io.github.novemdecillion.adapter.jooq.tables.FlywaySchemaHistoryTable
import io.github.novemdecillion.adapter.jooq.tables.GroupGenerationTable
import io.github.novemdecillion.adapter.jooq.tables.GroupTransitionTable
import io.github.novemdecillion.adapter.jooq.tables.GroupTransitionWithPathTable
import io.github.novemdecillion.adapter.jooq.tables.Group_0Table
import io.github.novemdecillion.adapter.jooq.tables.Group_1Table
import io.github.novemdecillion.adapter.jooq.tables.LessonTable
import io.github.novemdecillion.adapter.jooq.tables.NoticeTable
import io.github.novemdecillion.adapter.jooq.tables.RealmTable
import io.github.novemdecillion.adapter.jooq.tables.StudyTable

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Sequence
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA = DefaultSchema()
    }

    /**
     * The table <code>account</code>.
     */
    val ACCOUNT get() = AccountTable.ACCOUNT

    /**
     * The table <code>account_group_authority</code>.
     */
    val ACCOUNT_GROUP_AUTHORITY get() = AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY

    /**
     * The table <code>account_group_authority_0</code>.
     */
    val ACCOUNT_GROUP_AUTHORITY_0 get() = AccountGroupAuthority_0Table.ACCOUNT_GROUP_AUTHORITY_0

    /**
     * The table <code>account_group_authority_1</code>.
     */
    val ACCOUNT_GROUP_AUTHORITY_1 get() = AccountGroupAuthority_1Table.ACCOUNT_GROUP_AUTHORITY_1

    /**
     * The table <code>current_account_group_authority</code>.
     */
    val CURRENT_ACCOUNT_GROUP_AUTHORITY get() = CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY

    /**
     * The table <code>flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY get() = FlywaySchemaHistoryTable.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>group_0</code>.
     */
    val GROUP_0 get() = Group_0Table.GROUP_0

    /**
     * The table <code>group_1</code>.
     */
    val GROUP_1 get() = Group_1Table.GROUP_1

    /**
     * The table <code>group_generation</code>.
     */
    val GROUP_GENERATION get() = GroupGenerationTable.GROUP_GENERATION

    /**
     * The table <code>group_transition</code>.
     */
    val GROUP_TRANSITION get() = GroupTransitionTable.GROUP_TRANSITION

    /**
     * The table <code>group_transition_with_path</code>.
     */
    val GROUP_TRANSITION_WITH_PATH get() = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH

    /**
     * The table <code>lesson</code>.
     */
    val LESSON get() = LessonTable.LESSON

    /**
     * The table <code>notice</code>.
     */
    val NOTICE get() = NoticeTable.NOTICE

    /**
     * The table <code>realm</code>.
     */
    val REALM get() = RealmTable.REALM

    /**
     * The table <code>study</code>.
     */
    val STUDY get() = StudyTable.STUDY

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getSequences(): List<Sequence<*>> = listOf(
        GROUP_GENERATION_ID_SEQ
    )

    override fun getTables(): List<Table<*>> = listOf(
        AccountTable.ACCOUNT,
        AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY,
        AccountGroupAuthority_0Table.ACCOUNT_GROUP_AUTHORITY_0,
        AccountGroupAuthority_1Table.ACCOUNT_GROUP_AUTHORITY_1,
        CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY,
        FlywaySchemaHistoryTable.FLYWAY_SCHEMA_HISTORY,
        Group_0Table.GROUP_0,
        Group_1Table.GROUP_1,
        GroupGenerationTable.GROUP_GENERATION,
        GroupTransitionTable.GROUP_TRANSITION,
        GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH,
        LessonTable.LESSON,
        NoticeTable.NOTICE,
        RealmTable.REALM,
        StudyTable.STUDY
    )
}
