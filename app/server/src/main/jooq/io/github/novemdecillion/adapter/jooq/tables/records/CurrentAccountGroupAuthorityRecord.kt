/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.records


import io.github.novemdecillion.adapter.jooq.tables.CurrentAccountGroupAuthorityTable
import io.github.novemdecillion.adapter.jooq.tables.interfaces.ICurrentAccountGroupAuthority

import java.util.UUID

import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CurrentAccountGroupAuthorityRecord() : TableRecordImpl<CurrentAccountGroupAuthorityRecord>(CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY), Record4<UUID?, UUID?, String?, UUID?>, ICurrentAccountGroupAuthority {

    override var accountId: UUID?
        set(value) = set(0, value)
        get() = get(0) as UUID?

    override var groupTransitionId: UUID?
        set(value) = set(1, value)
        get() = get(1) as UUID?

    override var role: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    override var groupOriginId: UUID?
        set(value) = set(3, value)
        get() = get(3) as UUID?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<UUID?, UUID?, String?, UUID?> = super.fieldsRow() as Row4<UUID?, UUID?, String?, UUID?>
    override fun valuesRow(): Row4<UUID?, UUID?, String?, UUID?> = super.valuesRow() as Row4<UUID?, UUID?, String?, UUID?>
    override fun field1(): Field<UUID?> = CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY.ACCOUNT_ID
    override fun field2(): Field<UUID?> = CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY.GROUP_TRANSITION_ID
    override fun field3(): Field<String?> = CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY.ROLE
    override fun field4(): Field<UUID?> = CurrentAccountGroupAuthorityTable.CURRENT_ACCOUNT_GROUP_AUTHORITY.GROUP_ORIGIN_ID
    override fun component1(): UUID? = accountId
    override fun component2(): UUID? = groupTransitionId
    override fun component3(): String? = role
    override fun component4(): UUID? = groupOriginId
    override fun value1(): UUID? = accountId
    override fun value2(): UUID? = groupTransitionId
    override fun value3(): String? = role
    override fun value4(): UUID? = groupOriginId

    override fun value1(value: UUID?): CurrentAccountGroupAuthorityRecord {
        this.accountId = value
        return this
    }

    override fun value2(value: UUID?): CurrentAccountGroupAuthorityRecord {
        this.groupTransitionId = value
        return this
    }

    override fun value3(value: String?): CurrentAccountGroupAuthorityRecord {
        this.role = value
        return this
    }

    override fun value4(value: UUID?): CurrentAccountGroupAuthorityRecord {
        this.groupOriginId = value
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: String?, value4: UUID?): CurrentAccountGroupAuthorityRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: ICurrentAccountGroupAuthority) {
        accountId = from.accountId
        groupTransitionId = from.groupTransitionId
        role = from.role
        groupOriginId = from.groupOriginId
    }

    override fun <E : ICurrentAccountGroupAuthority> into(into: E): E {
        into.from(this)
        return into
    }

    /**
     * Create a detached, initialised CurrentAccountGroupAuthorityRecord
     */
    constructor(accountId: UUID? = null, groupTransitionId: UUID? = null, role: String? = null, groupOriginId: UUID? = null): this() {
        this.accountId = accountId
        this.groupTransitionId = groupTransitionId
        this.role = role
        this.groupOriginId = groupOriginId
    }
}
