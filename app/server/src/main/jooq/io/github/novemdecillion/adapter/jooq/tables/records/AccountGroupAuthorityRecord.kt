/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.records


import io.github.novemdecillion.adapter.jooq.tables.AccountGroupAuthorityTable
import io.github.novemdecillion.adapter.jooq.tables.interfaces.IAccountGroupAuthority

import java.util.UUID

import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record3
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AccountGroupAuthorityRecord() : UpdatableRecordImpl<AccountGroupAuthorityRecord>(AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY), Record4<UUID?, UUID?, Int?, JSONB?>, IAccountGroupAuthority {

    override var accountId: UUID?
        set(value) = set(0, value)
        get() = get(0) as UUID?

    override var groupTransitionId: UUID?
        set(value) = set(1, value)
        get() = get(1) as UUID?

    override var groupGenerationId: Int?
        set(value) = set(2, value)
        get() = get(2) as Int?

    override var role: JSONB?
        set(value) = set(3, value)
        get() = get(3) as JSONB?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record3<UUID?, UUID?, Int?> = super.key() as Record3<UUID?, UUID?, Int?>

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<UUID?, UUID?, Int?, JSONB?> = super.fieldsRow() as Row4<UUID?, UUID?, Int?, JSONB?>
    override fun valuesRow(): Row4<UUID?, UUID?, Int?, JSONB?> = super.valuesRow() as Row4<UUID?, UUID?, Int?, JSONB?>
    override fun field1(): Field<UUID?> = AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY.ACCOUNT_ID
    override fun field2(): Field<UUID?> = AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY.GROUP_TRANSITION_ID
    override fun field3(): Field<Int?> = AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY.GROUP_GENERATION_ID
    override fun field4(): Field<JSONB?> = AccountGroupAuthorityTable.ACCOUNT_GROUP_AUTHORITY.ROLE
    override fun component1(): UUID? = accountId
    override fun component2(): UUID? = groupTransitionId
    override fun component3(): Int? = groupGenerationId
    override fun component4(): JSONB? = role
    override fun value1(): UUID? = accountId
    override fun value2(): UUID? = groupTransitionId
    override fun value3(): Int? = groupGenerationId
    override fun value4(): JSONB? = role

    override fun value1(value: UUID?): AccountGroupAuthorityRecord {
        this.accountId = value
        return this
    }

    override fun value2(value: UUID?): AccountGroupAuthorityRecord {
        this.groupTransitionId = value
        return this
    }

    override fun value3(value: Int?): AccountGroupAuthorityRecord {
        this.groupGenerationId = value
        return this
    }

    override fun value4(value: JSONB?): AccountGroupAuthorityRecord {
        this.role = value
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: Int?, value4: JSONB?): AccountGroupAuthorityRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: IAccountGroupAuthority) {
        accountId = from.accountId
        groupTransitionId = from.groupTransitionId
        groupGenerationId = from.groupGenerationId
        role = from.role
    }

    override fun <E : IAccountGroupAuthority> into(into: E): E {
        into.from(this)
        return into
    }

    /**
     * Create a detached, initialised AccountGroupAuthorityRecord
     */
    constructor(accountId: UUID? = null, groupTransitionId: UUID? = null, groupGenerationId: Int? = null, role: JSONB? = null): this() {
        this.accountId = accountId
        this.groupTransitionId = groupTransitionId
        this.groupGenerationId = groupGenerationId
        this.role = role
    }
}
