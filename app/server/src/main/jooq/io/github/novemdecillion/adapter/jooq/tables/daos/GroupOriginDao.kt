/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.daos


import io.github.novemdecillion.adapter.jooq.tables.GroupOriginTable
import io.github.novemdecillion.adapter.jooq.tables.pojos.GroupOriginEntity
import io.github.novemdecillion.adapter.jooq.tables.records.GroupOriginRecord

import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GroupOriginDao(configuration: Configuration?) : DAOImpl<GroupOriginRecord, GroupOriginEntity, UUID>(GroupOriginTable.GROUP_ORIGIN, GroupOriginEntity::class.java, configuration) {

    /**
     * Create a new GroupOriginDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: GroupOriginEntity): UUID? = o.groupOriginId

    /**
     * Fetch records that have <code>group_origin_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    fun fetchRangeOfGroupOriginIdTable(lowerInclusive: UUID?, upperInclusive: UUID?): List<GroupOriginEntity> = fetchRange(GroupOriginTable.GROUP_ORIGIN.GROUP_ORIGIN_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>group_origin_id IN (values)</code>
     */
    fun fetchByGroupOriginIdTable(vararg values: UUID): List<GroupOriginEntity> = fetch(GroupOriginTable.GROUP_ORIGIN.GROUP_ORIGIN_ID, *values)

    /**
     * Fetch a unique record that has <code>group_origin_id = value</code>
     */
    fun fetchOneByGroupOriginIdTable(value: UUID): GroupOriginEntity? = fetchOne(GroupOriginTable.GROUP_ORIGIN.GROUP_ORIGIN_ID, value)
}
