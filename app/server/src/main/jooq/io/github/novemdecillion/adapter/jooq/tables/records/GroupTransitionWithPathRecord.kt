/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.records


import io.github.novemdecillion.adapter.jooq.tables.GroupTransitionWithPathTable
import io.github.novemdecillion.adapter.jooq.tables.interfaces.IGroupTransitionWithPath

import java.util.UUID

import org.jooq.Field
import org.jooq.Record7
import org.jooq.Row7
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GroupTransitionWithPathRecord() : TableRecordImpl<GroupTransitionWithPathRecord>(GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH), Record7<UUID?, Int?, String?, UUID?, Int?, String?, String?>, IGroupTransitionWithPath {

    override var groupTransitionId: UUID?
        set(value) = set(0, value)
        get() = get(0) as UUID?

    override var groupGenerationId: Int?
        set(value) = set(1, value)
        get() = get(1) as Int?

    override var groupName: String?
        set(value) = set(2, value)
        get() = get(2) as String?

    override var parentGroupTransitionId: UUID?
        set(value) = set(3, value)
        get() = get(3) as UUID?

    override var layer: Int?
        set(value) = set(4, value)
        get() = get(4) as Int?

    override var path: String?
        set(value) = set(5, value)
        get() = get(5) as String?

    override var pathName: String?
        set(value) = set(6, value)
        get() = get(6) as String?

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row7<UUID?, Int?, String?, UUID?, Int?, String?, String?> = super.fieldsRow() as Row7<UUID?, Int?, String?, UUID?, Int?, String?, String?>
    override fun valuesRow(): Row7<UUID?, Int?, String?, UUID?, Int?, String?, String?> = super.valuesRow() as Row7<UUID?, Int?, String?, UUID?, Int?, String?, String?>
    override fun field1(): Field<UUID?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.GROUP_TRANSITION_ID
    override fun field2(): Field<Int?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.GROUP_GENERATION_ID
    override fun field3(): Field<String?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.GROUP_NAME
    override fun field4(): Field<UUID?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.PARENT_GROUP_TRANSITION_ID
    override fun field5(): Field<Int?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.LAYER
    override fun field6(): Field<String?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.PATH
    override fun field7(): Field<String?> = GroupTransitionWithPathTable.GROUP_TRANSITION_WITH_PATH.PATH_NAME
    override fun component1(): UUID? = groupTransitionId
    override fun component2(): Int? = groupGenerationId
    override fun component3(): String? = groupName
    override fun component4(): UUID? = parentGroupTransitionId
    override fun component5(): Int? = layer
    override fun component6(): String? = path
    override fun component7(): String? = pathName
    override fun value1(): UUID? = groupTransitionId
    override fun value2(): Int? = groupGenerationId
    override fun value3(): String? = groupName
    override fun value4(): UUID? = parentGroupTransitionId
    override fun value5(): Int? = layer
    override fun value6(): String? = path
    override fun value7(): String? = pathName

    override fun value1(value: UUID?): GroupTransitionWithPathRecord {
        this.groupTransitionId = value
        return this
    }

    override fun value2(value: Int?): GroupTransitionWithPathRecord {
        this.groupGenerationId = value
        return this
    }

    override fun value3(value: String?): GroupTransitionWithPathRecord {
        this.groupName = value
        return this
    }

    override fun value4(value: UUID?): GroupTransitionWithPathRecord {
        this.parentGroupTransitionId = value
        return this
    }

    override fun value5(value: Int?): GroupTransitionWithPathRecord {
        this.layer = value
        return this
    }

    override fun value6(value: String?): GroupTransitionWithPathRecord {
        this.path = value
        return this
    }

    override fun value7(value: String?): GroupTransitionWithPathRecord {
        this.pathName = value
        return this
    }

    override fun values(value1: UUID?, value2: Int?, value3: String?, value4: UUID?, value5: Int?, value6: String?, value7: String?): GroupTransitionWithPathRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        return this
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: IGroupTransitionWithPath) {
        groupTransitionId = from.groupTransitionId
        groupGenerationId = from.groupGenerationId
        groupName = from.groupName
        parentGroupTransitionId = from.parentGroupTransitionId
        layer = from.layer
        path = from.path
        pathName = from.pathName
    }

    override fun <E : IGroupTransitionWithPath> into(into: E): E {
        into.from(this)
        return into
    }

    /**
     * Create a detached, initialised GroupTransitionWithPathRecord
     */
    constructor(groupTransitionId: UUID? = null, groupGenerationId: Int? = null, groupName: String? = null, parentGroupTransitionId: UUID? = null, layer: Int? = null, path: String? = null, pathName: String? = null): this() {
        this.groupTransitionId = groupTransitionId
        this.groupGenerationId = groupGenerationId
        this.groupName = groupName
        this.parentGroupTransitionId = parentGroupTransitionId
        this.layer = layer
        this.path = path
        this.pathName = pathName
    }
}
