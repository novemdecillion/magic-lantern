fragment groupCore on GroupCore {
  groupId
  groupName
}

fragment group on Group {
  groupId
  groupOriginId
  groupGenerationId
  groupName
  parentGroupId
  path {
    ...groupCore
  }
}

query group($groupId: ID!) {
  group(groupId: $groupId) {
    ...group
  }
}

#query topManageableGroups {
#  topManageableGroups {
#    ...groupWithPath
#  }
#}

query authoritativeGroups($role: Role!) {
  authoritativeGroups(role: $role) {
    ...group
  }
}

query effectiveGroups($role: Role!) {
  effectiveGroups(role: $role) {
    ...group
  }
}

mutation addGroup($command: AddGroupCommand!) {
  addGroup(command: $command)
}

mutation editGroup($command: EditGroupCommand!) {
  editGroup(command: $command)
}

mutation deleteGroup($groupId: ID!) {
  deleteGroup(groupId: $groupId)
}

mutation addGroupMember($command: AddGroupMemberCommand!) {
  addGroupMember(command: $command)
}

mutation editGroupMember($command: GroupMemberCommand!) {
  editGroupMember(command: $command)
}

mutation deleteGroupMember($groupId: ID!, $userId: ID!) {
  deleteGroupMember(groupId: $groupId, userId: $userId)
}
