fragment groupCore on GroupCore {
  groupId
  groupName
}

fragment groupWithPath on GroupWithPath {
  group {
    ...group
  }
  path {
    ...groupCore
  }
}

fragment group on Group {
  groupId
  groupOriginId
  groupGenerationId
  groupName
  parentGroupId
}

query group($groupId: ID!) {
  group(groupId: $groupId) {
    ...groupWithPath
  }
}

#query topManageableGroups {
#  topManageableGroups {
#    ...groupWithPath
#  }
#}

query authoritativeGroups($role: Role) {
  authoritativeGroups(role: $role) {
    ...groupWithPath
  }
}

query effectiveGroups($role: Role) {
  effectiveGroups(role: $role) {
    ...groupWithPath
  }
}

mutation addGroup($command: AddGroupCommand) {
  addGroup(command: $command)
}

mutation editGroup($command: EditGroupCommand) {
  editGroup(command: $command)
}

mutation deleteGroup($groupId: ID) {
  deleteGroup(groupId: $groupId)
}

mutation addGroupMember($command: AddGroupMemberCommand) {
  addGroupMember(command: $command)
}

mutation editGroupMember($command: GroupMemberCommand) {
  editGroupMember(command: $command)
}

mutation deleteGroupMember($groupId: ID, $userId: ID) {
  deleteGroupMember(groupId: $groupId, userId: $userId)
}
