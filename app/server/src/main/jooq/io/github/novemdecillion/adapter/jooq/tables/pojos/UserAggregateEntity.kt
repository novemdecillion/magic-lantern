/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.adapter.jooq.tables.pojos


import io.github.novemdecillion.adapter.jooq.tables.interfaces.IUserAggregate

import java.util.UUID

import org.jooq.JSONB


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class UserAggregateEntity(
    override var accountId: UUID? = null, 
    override var accountName: String? = null, 
    override var password: String? = null, 
    override var userName: String? = null, 
    override var email: String? = null, 
    override var locale: String? = null, 
    override var realmId: String? = null, 
    override var enabled: Boolean? = null, 
    override var role: JSONB? = null
): IUserAggregate {


    override fun toString(): String {
        val sb = StringBuilder("UserAggregateEntity (")

        sb.append(accountId)
        sb.append(", ").append(accountName)
        sb.append(", ").append(password)
        sb.append(", ").append(userName)
        sb.append(", ").append(email)
        sb.append(", ").append(locale)
        sb.append(", ").append(realmId)
        sb.append(", ").append(enabled)
        sb.append(", ").append(role)

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: IUserAggregate) {
        accountId = from.accountId
        accountName = from.accountName
        password = from.password
        userName = from.userName
        email = from.email
        locale = from.locale
        realmId = from.realmId
        enabled = from.enabled
        role = from.role
    }

    override fun <E : IUserAggregate> into(into: E): E {
        into.from(this)
        return into
    }
}
