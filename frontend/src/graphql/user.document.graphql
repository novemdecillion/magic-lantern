fragment authority on Authority {
  groupId
  roles
}

fragment user on User {
  userId
  accountName
  userName
  realmId
  email
  enabled
  isSystemRealm
  authorities {
    ...authority
  }
}

fragment realm on Realm {
  realmId
  realmName
  enabled
  syncAt
}

query currentUser {
  currentUser {
    ...user
  }
}

query users {
  userCount
  users {
    ...user
  }
  realms {
    ...realm
  }
}

query realms {
  realms {
    ...realm
  }
}

query groupAppendableMembers($groupId: ID!) {
  groupAppendableMembers(groupId: $groupId) {
    ...user
  }
}


mutation syncRealm($realmId: String) {
  syncRealm(realmId: $realmId)
}

fragment studyChapterRecord on StudyChapterRecord {
  chapterIndex
  passScore
  questions {
    score
    scoring
  }
}

fragment studyProgress on StudyProgress {
  chapterIndex
  pageIndexes
}

#fragment studyChapterAnswer on StudyChapterAnswer {
#  chapterIndex
#  questions {
#    questionIndex
#    answers
#  }
#}

fragment notStartStudy on NotStartStudy {
  userId
  status

  slide {
    ...slide
  }
#  lessons {
#    lessonId
#    group {
#      ...group
#    }
#  }
}

fragment study on Study {
  studyId
  userId
  status

  progressDetails {
    ...studyProgress
  }
  progressRate

  scoreDetails {
    ...studyChapterRecord
  }

  startAt
  endAt

  slide {
    ...slide
  }
}

query study($studyId: ID!) {
  study(studyId: $studyId) {
    ...study
  }
}

mutation addUser($command: AddUserCommand!) {
  addUser(command: $command)
}

mutation updateUser($command: UpdateUserCommand!) {
  updateUser(command: $command)
}

mutation changePassword($command: ChangePasswordCommand!) {
  changePassword(command: $command)
}

mutation deleteUser($userId: ID!) {
  deleteUser(userId: $userId)
}

mutation startStady($slideId: ID!) {
  startStudy(slideId: $slideId)
}

mutation changeStudyStatus($command: ChangeStudyStatus!) {
  changeStudyStatus(command: $command)
}
