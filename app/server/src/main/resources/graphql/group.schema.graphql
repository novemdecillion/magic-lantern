type Member {
  userId: ID!
  roles: [Role!]!
}

interface IGroupCOre {
  groupId: ID!
  groupName: String!
}

type GroupCore implements IGroupCOre {
  groupId: ID!
  groupName: String!
}

type Group implements IGroupCOre {
  groupId: ID!
  groupOriginId: ID!
  groupGenerationId: ID!
  groupName: String!
  parentGroupId: ID
#  members: [Member!]
#  courses: [ID!]
  path: [GroupCore!]!
}

input AddGroupCommand {
  groupOriginId: ID
  groupGenerationId: ID
  groupName: String!
  parentGroupId: ID!
}

input EditGroupCommand {
  groupId: ID!
  groupName: String!
}

input AddGroupMemberCommand {
  groupId: ID!
  userId: [ID!]!
  role: [Role!]!
}

input GroupMemberCommand {
  groupId: ID!
  userId: ID!
  role: [Role!]!
}
